# import the csv into a dataframe, and renaming the columns upon import (setting the header to 0 allows us to import our own column names)
df = pd.read_csv('QueryResults.csv', names=['DATE', 'TAG', 'POSTS'], header=0)

# you can also rename the column after importing, by designating what old columns we want to rename, and then what we want the new names to be (inplace=True makes the change permanent)
df.rename(columns={'m': 'Date', 'TagName': 'Tag', 'Unnamed: 2': 'Posts'}, inplace=True)

# grouping by the tag (designating which programming language the post was about) and summing to see the total # of posts since 2008 (the length of the data)
df.groupby('Tag').sum()

# grouping by the tag column and counting the # of rows for each language. The rows were separated by month so this tells us how many months there was a post for each language.
df.groupby('Tag').count()

# converting an entire columns format (using Pandas' to_datetime() method )
df.Date = pd.to_datetime(df.Date)

# creating a new dataframe, in the shape of a pivot table
# index = rows, columns = columns, values = values

# if we want to replace all of the NaN values with zero, we can do this
# don't forget the inplace=True or it won't update the actual df and you'd need something like this: reshaped_df = reshaped_df.fillna(0) 
reshaped_df.fillna(0, inplace=True)

# this will check if there are any NaN values at all in the dataframe, so you don't have to look manually
reshaped_df.isna().values.any()